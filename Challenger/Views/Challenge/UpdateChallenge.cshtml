@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using Challenger.DataLayer
@model Challenger.Models.UpdateChallengeViewModel
@Scripts.Render("~/bundles/jquery")

<div>
    <form method="post" action="@Url.Action("UpdateChallenge", "Challenge")">
        <input type="hidden" value="@Model.Type" name="Type" class="form-control" id="Type" />
        <br />
        <input type="hidden" value="@Model.Status" class="form-control" name="Status" id="Status" />
        <dl>
            <dt>
                Challenger
                <input id="Challenger" name="Challenger" class="form-control" type="text" value="@Html.DisplayFor(x => x.Challenger)" disabled />
                <br />
                Type
                <p>
                    <input selected="selected" disabled value="@Html.DisplayFor(x => x.Type)" />
                </p>
                @if (!(Model.DueDate == null))
                {
                    @Html.DisplayNameFor(m => m.DueDate)
                    @*@Html.TextBoxFor(m => m.DueDate)*@
                    <input id="DueDate" name="DueDate" type="text" class="form-control" value="@Html.DisplayFor(x => x.DueDate)" disabled />
                }
            </dt>
            <dt>
                <br />
                @Html.DisplayNameFor(m => m.Assignee)
                @*@Html.TextBoxFor(m => m.Assignee)*@
                <input id="Assignee" name="Assignee" type="text" class="form-control" value="@Html.DisplayFor(x => x.Assignee)" disabled />
            </dt>
            <dt id="">
                <br />
                @Html.DisplayNameFor(m => m.Title)
                @*@Html.TextBoxFor(m => m.Title)*@
                <input id="Title" name="Title" type="text" class="form-control" value="@Html.DisplayFor(x => x.Title)" disabled />
                <p id="Quantityy">
                    @if (Html.DisplayFor(x => x.Type).ToString() != (Task.ChallengeType.OneTime).ToString() && Model.Status != Task.ChallengeStatus.Sent)
                    {
                        <br />
                            <div>Quantity left:  @Html.DisplayFor(x => x.QuantityLeft)</div>

                        if (Html.DisplayFor(x => x.Type).ToString() == (Task.ChallengeType.Quantity).ToString())
                        {
                            <input data-val="true" class="form-control" data-val-number="The field Quantity must be a number." id="Quantity" name="Quantity" type="text" value="" />
                        }
                    }
                </p>
            </dt>
            <dt>
                @Html.DisplayNameFor(m => m.Description)
            </dt>
            <dd>
                <br />
                @*@Html.TextBoxFor(m => m.Description)*@
                <input id="Description" class="form-control" name="Description" type="text" value="@Html.DisplayFor(x => x.Description)" disabled />
            </dd>
        </dl>
        @if(Model.Status != Task.ChallengeStatus.Sent)
        {
        <button type="submit" class="btn btn-success">Submit</button>
        }
    </form>
    @if (Model.Status == Task.ChallengeStatus.Sent)
    {
        <form method="post" action="@Url.Action("AcceptChallenge", "Challenge")">
            <input type="hidden" value="@Model.ID" name="ID" id="ID" />
            <button type="submit" class="btn btn-success">Accept</button>
        </form>
        <form method="post" action="@Url.Action("DeclineChallenge", "Challenge")">
            <input type="hidden" value="@Model.ID" name="ID" id="ID" />
            <button type="submit" class="btn btn-default">Decline</button>
        </form>
    }
</div>
